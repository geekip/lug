name: Release

on:
  push:
    tags:
      - 'v*'  # 触发条件：推送v开头的tag时运行

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整git历史用于生成源码包

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.3'  # 根据实际需要调整Go版本

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: Get version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build binaries
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          mkdir -p release
          # 定义所有构建目标：OS ARCH 打包格式 文件扩展名
          targets=(
            "linux amd64 tar.gz"
            "linux arm64 tar.gz"
            "darwin amd64 tar.gz"
            "darwin arm64 tar.gz"
            "windows amd64 zip exe"
            "windows arm64 zip exe"
          )

          for target in "${targets[@]}"; do
            IFS=' ' read -r os arch format ext <<< "$target"
            binary_name="lug"
            [[ "$os" == "windows" ]] && binary_name="lug.exe"
            
            # 编译
            GOOS=$os GOARCH=$arch go build -o $binary_name .
            
            # 打包
            package_name="lug_${VERSION}_${os}_${arch}"
            if [ "$format" == "zip" ]; then
              zip "release/${package_name}.zip" $binary_name
            else
              tar czvf "release/${package_name}.tar.gz" $binary_name
            fi
            
            rm -f $binary_name
          done

      - name: Generate SHA256 checksums
        run: |
          cd release
          sha256sum * > sha256.list

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*.tar.gz
            release/*.zip
            release/sha256.list
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}